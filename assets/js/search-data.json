{
  
    
        "post0": {
            "title": "Week 2 Work",
            "content": "| Overview | Week 0 | Week 1 | Week 2 | Life Game | Grades Calculator | . Review Ticket . Code.org OOP Assignment . Console Math Menu . Life . Weekly Organization .",
            "url": "https://saathvika-ajith.github.io/APCSA-Fastpages/organization/week2",
            "relUrl": "/organization/week2",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Game of Life",
            "content": "| Overview | Week 0 | Week 1 | Week 2 | Life Game | Grades Calculator | . Remix of Game of Life . start step",
            "url": "https://saathvika-ajith.github.io/APCSA-Fastpages/organization/life",
            "relUrl": "/organization/life",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Grades Calculator",
            "content": "| Overview | Week 0 | Week 1 | Week 2 | Life Game | Grades Calculator | . Grade Calculator . Total : 0.0 Count : 0.0 Average : 0.0 Input a score, and then press tab to add new number: .",
            "url": "https://saathvika-ajith.github.io/APCSA-Fastpages/organization/grades",
            "relUrl": "/organization/grades",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Console Math Menu",
            "content": "// imports allow you to use code already written by others. It is good to explore and learn libraries. The names around the dots often give you a hint to the originator of the code. import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;__________________________ n&quot;); System.out.println(&quot;Choose from these choices:&quot;); System.out.println(&quot;__________________________ n&quot;); System.out.println(&quot;1 - Say Hello&quot;); System.out.println(&quot;2 - Output colors&quot;); System.out.println(&quot;3 - Loading in color&quot;); System.out.println(&quot;4 - Factorial Calculator&quot;); System.out.println(&quot;5 - Degrees to Radians&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;__________________________ n&quot;); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;Goodbye, World!&quot;); quit = true; break; case 1: System.out.print(&quot;Hello, World!&quot;); break; case 2: for(int i = 0; i &lt; COLORS.length; i++) // loop through COLORS array System.out.print(COLORS[i][ANSI] + COLORS[i][NAME]); break; case 3: System.out.print(&quot;Loading...&quot;); for (int i = 0; i &lt; 10; i++) { // fixed length loading bar int random = (int) (Math.random() * COLORS.length); // random logic try { Thread.sleep(100); // delay for loading } catch (Exception e) { System.out.println(e); } System.out.print(COLORS[random][ANSI] + &quot;Hey! &quot;); } break; case 4: System.out.print(&quot;Enter an Integer:&quot;); Scanner myObj = new Scanner(System.in); int number = myObj.nextInt(); int i,fact=1; for(i=1;i&lt;=number;i++){ fact=fact*i; } System.out.println(&quot; nFactorial of &quot;+number+&quot; is: &quot;+fact); break; case 5: System.out.print(&quot;Enter a Degree Value:&quot;); Scanner myObj2 = new Scanner(System.in); double number2 = myObj2.nextDouble(); double radians = Math.toRadians(number2); System.out.println(&quot; nValue in Radians = &quot; + String.format(&quot;%.2f&quot;, radians)); break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } } Menu.main(null); . __________________________ Choose from these choices: __________________________ 1 - Say Hello 2 - Output colors 3 - Loading in color 4 - Factorial Calculator 5 - Degrees to Radians 0 - Quit __________________________ 4: Enter an Integer: Factorial of 4 is: 24 5: Enter a Degree Value: Value in Radians = 0.09 0: Goodbye, World! .",
            "url": "https://saathvika-ajith.github.io/APCSA-Fastpages/fastpages/jupyter/2022/09/02/menu.html",
            "relUrl": "/fastpages/jupyter/2022/09/02/menu.html",
            "date": " • Sep 2, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Week 1 Work",
            "content": "| Overview | Week 0 | Week 1 | Week 2 | Life Game | Grades Calculator | . Review Ticket . Code.org OOP Assignment . Primitives Notebook . Bash Notebook . Fastpages .",
            "url": "https://saathvika-ajith.github.io/APCSA-Fastpages/organization/week1",
            "relUrl": "/organization/week1",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Primitives Notebook",
            "content": "Listing the types of primitives: . public class ListPrimitives { public static void main(String[] args) { // assigning variable values int anInt = 505; double aDouble = 99.9; boolean aBoolean = true; char aChar=&#39; u0021&#39;; // not a primitive but essential String aString = &quot;Look over there!&quot;; System.out.println(&quot;Types of Primitives:&quot;); System.out.println(&quot;--&gt; Integer: &quot; + anInt); System.out.println(&quot;--&gt; Double: &quot; + aDouble); System.out.println(&quot;--&gt; Character: &quot; + aChar); System.out.println(&quot;--&gt; Boolean: &quot; + aBoolean); System.out.println(&quot;--&gt; String: &quot; + aString); } } ListPrimitives.main(null) . Types of Primitives: --&gt; Integer: 505 --&gt; Double: 99.9 --&gt; Character: ! --&gt; Boolean: true --&gt; String: Look over there! . Division with ints and doubles: . public class Division { public static void main(String[] args) { // setting the variables int divided = 17 / 24; double doubleDivided = 17.0 / 24.0; // printing out the division in int and double form System.out.println(&quot;Integer division with 17/24 is: &quot; + divided); // %.2f limits the # of decimal values displayed System.out.println(&quot;Double division with 17.0/24.0 is: &quot; + String.format(&quot;%.2f&quot;, doubleDivided)); } } // makes it so you can print the code&#39;s output Division.main(null) . Integer division with 17/24 is: 0 Double division with 17.0/24.0 is: 0.71 . Celsius to Fahrenheit Converter . public class CtoF { public static void main(String[] args) { System.out.println(&quot;Celsius to Fahrenheit Converter:&quot;); System.out.println(&quot;Degrees Celsius: 55 --&gt;&quot;); int celsius = 55; int fahrenheit = ((celsius*9)/5)+32; System.out.println(&quot; tDegrees Fahrenheit: &quot; + fahrenheit); System.out.println(&quot;Degrees Celsius: 78 --&gt;&quot;); int celsius1 = 78; int fahrenheit1 = ((celsius1*9)/5)+32; System.out.println(&quot; tDegrees Fahrenheit: &quot; + fahrenheit1); System.out.println(&quot;Degrees Celsius: 11 --&gt;&quot;); int celsius2 = 11; int fahrenheit2 = ((celsius2*9)/5)+32; System.out.println(&quot; tDegrees Fahrenheit: &quot; + fahrenheit2); } } // makes it so you can print the code&#39;s output CtoF.main(null) . Celsius to Fahrenheit Converter: Degrees Celsius: 55 --&gt; Degrees Fahrenheit: 131 Degrees Celsius: 78 --&gt; Degrees Fahrenheit: 172 Degrees Celsius: 11 --&gt; Degrees Fahrenheit: 51 . Inputting primitive data: . // java style to import library import java.util.Scanner; // class must alway have 1st letter as uppercase, CamelCase is Java Class convention public class ScanPrimitives { public static void main(String[] args) { Scanner input; // primitive int input = new Scanner(System.in); System.out.print(&quot;Enter an integer: &quot;); try { int sampleInputInt = input.nextInt(); System.out.println(sampleInputInt); } catch (Exception e) { // if not an integer System.out.println(&quot;Not an integer (form like 159), &quot; + e); } input.close(); // primitive double input = new Scanner(System.in); System.out.print(&quot;Enter a double: &quot;); try { double sampleInputDouble = input.nextDouble(); System.out.println(sampleInputDouble); } catch (Exception e) { // if not a number System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } input.close(); // primitive boolean input = new Scanner(System.in); System.out.print(&quot;Enter a boolean: &quot;); try { boolean sampleInputBoolean = input.nextBoolean(); System.out.println(sampleInputBoolean); } catch (Exception e) { // if not true or false System.out.println(&quot;Not an boolean (true or false), &quot; + e); } input.close(); // wrapper class String input = new Scanner(System.in); System.out.print(&quot;Enter a String: &quot;); try { String sampleInputString = input.nextLine(); System.out.println(sampleInputString); } catch (Exception e) { // this may never happen System.out.println(&quot;Not an String, &quot; + e); } input.close(); } } ScanPrimitives.main(null); . Enter an integer: 2 Enter a double: 2.0 Enter a boolean: true Enter a String: hi .",
            "url": "https://saathvika-ajith.github.io/APCSA-Fastpages/fastpages/jupyter/2022/08/28/primitives.html",
            "relUrl": "/fastpages/jupyter/2022/08/28/primitives.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Bash Notebook",
            "content": "echo &quot;The currently installed python verision:&quot; python --version echo &quot;&quot; echo &quot;The currently installed conda verion:&quot; conda --version echo &quot;&quot; echo &quot;The currently installed java features:&quot; java --version echo &quot;&quot; echo &quot;The currently installed jupyter packages:&quot; jupyter --version . The currently installed python verision: Python 3.9.12 The currently installed conda verion: conda 4.14.0 The currently installed java features: openjdk 11.0.16 2022-07-19 OpenJDK Runtime Environment (build 11.0.16+8-post-Ubuntu-0ubuntu120.04) OpenJDK 64-Bit Server VM (build 11.0.16+8-post-Ubuntu-0ubuntu120.04, mixed mode, sharing) The currently installed jupyter packages: Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 . Jupyter Kernel Checks: . jupyter kernelspec list . Available kernels: bash /home/saathvika/.local/share/jupyter/kernels/bash java /home/saathvika/.local/share/jupyter/kernels/java javascript /home/saathvika/.local/share/jupyter/kernels/javascript python3 /home/saathvika/.local/share/jupyter/kernels/python3 . Anaconda Location Check: . echo &quot;Folders inside WSL:&quot; ls / echo &quot;&quot; echo &quot;Folders inside Home:&quot; ls /home echo &quot;&quot; echo &quot;Folders inside Saathvika:&quot; ls /home/saathvika echo &quot;&quot; echo &quot;We&#39;ve found Anaconda!&quot; . Folders inside WSL: bin etc lib libx32 mnt root snap tmp wslLdjHgc boot home lib32 lost+found opt run srv usr wsldnLbHg dev init lib64 media proc sbin sys var Folders inside Home: saathvika Folders inside Saathvika: APCSA Anaconda3-2022.05-Linux-x86_64.sh vscode APCSA-Fastpages Anaconda3-2022.05-Linux-x86_64.sh.1 APCSP anaconda3 We&#39;ve found Anaconda! .",
            "url": "https://saathvika-ajith.github.io/APCSA-Fastpages/fastpages/jupyter/2022/08/28/bash.html",
            "relUrl": "/fastpages/jupyter/2022/08/28/bash.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Week 0 Work",
            "content": "| Overview | Week 0 | Week 1 | Week 2 | Life Game | Grades Calculator | . Review Ticket . Python Tester Notebook . Java Tester Notebook .",
            "url": "https://saathvika-ajith.github.io/APCSA-Fastpages/organization/week0",
            "relUrl": "/organization/week0",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Python Notebook",
            "content": "print(&quot;Hello&quot;) . Hello .",
            "url": "https://saathvika-ajith.github.io/APCSA-Fastpages/fastpages/jupyter/2022/08/22/python.html",
            "relUrl": "/fastpages/jupyter/2022/08/22/python.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Java Notebook",
            "content": "public class Hello { public static void main(String[] args) { System.out.println(&quot;Hello World!&quot;); } } Hello.main(null); . Hello World! .",
            "url": "https://saathvika-ajith.github.io/APCSA-Fastpages/fastpages/jupyter/2022/08/22/java.html",
            "relUrl": "/fastpages/jupyter/2022/08/22/java.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Example Markdown Post",
            "content": "Example Markdown Post . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() .",
            "url": "https://saathvika-ajith.github.io/APCSA-Fastpages/markdown/2022/08/20/new-page-markdown-post.html",
            "relUrl": "/markdown/2022/08/20/new-page-markdown-post.html",
            "date": " • Aug 20, 2022"
        }
        
    
  

  
  

  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://saathvika-ajith.github.io/APCSA-Fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}